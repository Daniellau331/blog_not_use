<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Daniel&#39;s Farmland</title>
  
  <subtitle>Go to the ant, you sluggard, consider its ways and be wise!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-13T03:24:58.234Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Daniel Lau</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>IPA - 筆記</title>
    <link href="http://yoursite.com//post/43097/"/>
    <id>http://yoursite.com//post/43097/</id>
    <published>2019-06-12T20:33:14.000Z</published>
    <updated>2019-06-13T03:24:58.234Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>IPA指的是International Phonetic Alphabet，也就是國際音標。學這的原因：改善英語發音，讓自已可以更加準確的表達。</p><h1 id="元音"><a href="#元音" class="headerlink" title="元音"></a>元音</h1><p>英語共有24個元音。元音與輔音的分別是，元音是要振動聲帶的。</p><h2 id="i-單元音"><a href="#i-單元音" class="headerlink" title="[i]單元音"></a>[i]單元音</h2><img src="/post/43097/photo1.JPG"><p>發音特點：</p><ul><li>長音</li><li>發音類似”衣”</li></ul><p>單詞：</p><ul><li>eat</li><li>need </li><li>thief</li><li>heat </li><li>sheep</li></ul><h2 id="1-I-單元音"><a href="#1-I-單元音" class="headerlink" title="1. [I]單元音"></a>1. [I]單元音</h2><img src="/post/43097/photo2.JPG"><p>發音特點：</p><ul><li>短音</li><li>嘴張的比發[i]的開</li></ul><p>單詞：</p><ul><li>sit</li><li>fit</li><li>give</li><li>six</li><li>pig</li></ul><h2 id="2-e-雙元音"><a href="#2-e-雙元音" class="headerlink" title="2. [e]雙元音"></a>2. [e]雙元音</h2><img src="/post/43097/photo3.JPG"><p>發音特點：</p><ul><li>先發[ɛ]，再發[I]，中問不停頓</li></ul><p>單詞：</p><ul><li>lake</li><li>make</li><li>later</li><li>plane</li><li>main</li><li>train</li><li>saint</li></ul><h2 id="e-單元音"><a href="#e-單元音" class="headerlink" title="[ɛ]單元音"></a>[ɛ]單元音</h2><img src="/post/43097/photo4.JPG"><p>發音特點：</p><ul><li>嘴巴比發[I]更開</li><li>舌平放，抵住下齒</li></ul><p>單詞：</p><ul><li>bed</li><li>let</li><li>pen</li><li>set</li><li>sex</li><li>beg</li></ul><h2 id="ae-雙元音"><a href="#ae-雙元音" class="headerlink" title="[æ]雙元音"></a>[æ]雙元音</h2><img src="/post/43097/photo5.JPG"><p>發音特點：</p><ul><li>嘴張大</li><li>下巴盡量住下拉</li><li>和平放，抵住下齒</li></ul><p>單詞：</p><ul><li>bad</li><li>dad</li><li>matter</li><li>bag</li><li>land</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;IPA指的是International Phonetic Alphabet，也就是國際音標。學這的原因：改善英語發音，讓自已可以更加準確的表
      
    
    </summary>
    
      <category term="學習" scheme="http://yoursite.com/categories/%E5%AD%B8%E7%BF%92/"/>
    
    
      <category term="IPA" scheme="http://yoursite.com/tags/IPA/"/>
    
  </entry>
  
  <entry>
    <title>日記 - 061219</title>
    <link href="http://yoursite.com//post/43644/"/>
    <id>http://yoursite.com//post/43644/</id>
    <published>2019-06-12T20:19:26.000Z</published>
    <updated>2019-06-12T20:31:58.475Z</updated>
    
    <content type="html"><![CDATA[<p>今天是星期三，所以今天早上去了剪草。每週三都要去剪草和倒垃圾。</p><p>剛剛order完我的transcript，應該可以在7月頭前送到Davis吧。</p><p>昨天要訂的貨，被其他人搶了。自己不知道是否要繼續去做FBA，還是改去做drop shipping。今天要抽一點的時間去研究drop shipping。</p><p>很想要Macbook Pro啊，哈哈，真的很美。希望下一年能買一個。</p><h1 id="Todo-list"><a href="#Todo-list" class="headerlink" title="Todo list"></a>Todo list</h1><ul><li>剪草、倒垃圾</li><li>order transcript</li><li>leetcode </li><li>IPA</li><li>學一下python</li><li>看一會so good they can’t ignore you</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天是星期三，所以今天早上去了剪草。每週三都要去剪草和倒垃圾。&lt;/p&gt;
&lt;p&gt;剛剛order完我的transcript，應該可以在7月頭前送到Davis吧。&lt;/p&gt;
&lt;p&gt;昨天要訂的貨，被其他人搶了。自己不知道是否要繼續去做FBA，還是改去做drop shipping。今天
      
    
    </summary>
    
      <category term="生活點滴" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E9%BB%9E%E6%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>日記 - 061119</title>
    <link href="http://yoursite.com//post/44240/"/>
    <id>http://yoursite.com//post/44240/</id>
    <published>2019-06-12T05:45:01.000Z</published>
    <updated>2019-06-12T20:20:00.781Z</updated>
    
    <content type="html"><![CDATA[<p>嘻嘻，歡迎川川！</p><p>有一個多月没有更新了。5月底時已經考完試了。本想着考完試後會閒下來，但實際上卻是相反。最近在弄Amazon上弄FBA的東西，算上這個summer的一個小小的project，希望可以學到東西之餘，還可以賺到一些的錢。希望明天可以找到一個比較好的product。</p><p>還有兩年的才畢業，還有兩年的學費要交。這兩年的學費可以提升很多的credit，我朋友現在的credit都到720左右了。本來我是想着要用debit card的，因為錢將會在debit card裡，没想過要申請credit card去交學費。很開心，知道了這個。我以前剛好在學校打過工，所以有工卡，可以申請到credit card。明天去申請去，嘻嘻。</p><p>哇，好累啊，不想寫了哈哈。明天再寫。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;嘻嘻，歡迎川川！&lt;/p&gt;
&lt;p&gt;有一個多月没有更新了。5月底時已經考完試了。本想着考完試後會閒下來，但實際上卻是相反。最近在弄Amazon上弄FBA的東西，算上這個summer的一個小小的project，希望可以學到東西之餘，還可以賺到一些的錢。希望明天可以找到一個比較好的
      
    
    </summary>
    
      <category term="生活點滴" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E9%BB%9E%E6%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>日記 - 042219</title>
    <link href="http://yoursite.com//post/11781/"/>
    <id>http://yoursite.com//post/11781/</id>
    <published>2019-04-22T18:38:19.000Z</published>
    <updated>2019-04-26T05:35:38.894Z</updated>
    
    <content type="html"><![CDATA[<p>今天發現了一個叫timing的app，這是一個供多一起學習的app。具體有什麼的功能，我暫時也不太清楚。但其實有一個能功是，可以快拍自己學習的視頻。今天打算試試去玩一下這。</p><p>另外，今天還了一個手工藝品(能吃的)。下個月是我舅媽外甥的生日，所以她想為他親自做一個生日蛋糕。這個生日蛋糕是以鯊魚為主題的。一會我會放一些照片在這。<br><img src="/post/11781/photo1.jpg"><br><img src="/post/11781/photo2.jpg"><br><img src="/post/11781/photo3.jpg"></p><h1 id="今日句子"><a href="#今日句子" class="headerlink" title="今日句子"></a>今日句子</h1><p>When someone says, I want a programming language in which I need only say what I wish done, give him a lollipop. -Alan Perlis</p><p>The “real meat” of history is ideas and ideals that have proved their worth in practical use.</p><p>The ultimate aim of pragramming is always to produce useful systems.</p><p>we cannot not have all of the good properties because several of the properties are mutually exclusive.</p><h1 id="今日英語單詞"><a href="#今日英語單詞" class="headerlink" title="今日英語單詞"></a>今日英語單詞</h1><ul><li>bunk (N-count) 鋪位  History is a bunk. 95% of everthing is bunk.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天發現了一個叫timing的app，這是一個供多一起學習的app。具體有什麼的功能，我暫時也不太清楚。但其實有一個能功是，可以快拍自己學習的視頻。今天打算試試去玩一下這。&lt;/p&gt;
&lt;p&gt;另外，今天還了一個手工藝品(能吃的)。下個月是我舅媽外甥的生日，所以她想為他親自做一個
      
    
    </summary>
    
      <category term="生活點滴" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E9%BB%9E%E6%BB%B4/"/>
    
    
      <category term="日記" scheme="http://yoursite.com/tags/%E6%97%A5%E8%A8%98/"/>
    
  </entry>
  
  <entry>
    <title>日記 - 042119</title>
    <link href="http://yoursite.com//post/18879/"/>
    <id>http://yoursite.com//post/18879/</id>
    <published>2019-04-21T19:12:33.000Z</published>
    <updated>2019-04-22T18:37:36.421Z</updated>
    
    <content type="html"><![CDATA[<img src="/post/18879/photo1.jpg"><p>這是午餐吃的沙拉。</p><h1 id="知識爆炸的時代"><a href="#知識爆炸的時代" class="headerlink" title="知識爆炸的時代"></a>知識爆炸的時代</h1><p>自從有了計算機和網絡後，我們就步入了知識爆炸的時代了。 讀書讀的快，固然是件好事。但我認為我們得學會去過濾不重要的信息。</p><p>哈哈，今天没想到要寫些什麼。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/post/18879/photo1.jpg&quot;&gt;
&lt;p&gt;這是午餐吃的沙拉。&lt;/p&gt;
&lt;h1 id=&quot;知識爆炸的時代&quot;&gt;&lt;a href=&quot;#知識爆炸的時代&quot; class=&quot;headerlink&quot; title=&quot;知識爆炸的時代&quot;&gt;&lt;/a&gt;知識爆炸的時代&lt;/h1&gt;&lt;
      
    
    </summary>
    
      <category term="生活點滴" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E9%BB%9E%E6%BB%B4/"/>
    
    
      <category term="日記" scheme="http://yoursite.com/tags/%E6%97%A5%E8%A8%98/"/>
    
  </entry>
  
  <entry>
    <title>收到大學的通知</title>
    <link href="http://yoursite.com//post/62046/"/>
    <id>http://yoursite.com//post/62046/</id>
    <published>2019-04-21T04:59:32.000Z</published>
    <updated>2019-04-21T18:42:41.921Z</updated>
    
    <content type="html"><![CDATA[<img src="/post/62046/photo1.PNG"><p>昨天下午我準備去洗澡時，收到這個通知書。很好心，很期待在這可以學到很多的知識。我身邊與我同年齡的朋友都基本上畢業了一年了，而我卻還有兩年要去讀。我會好好珍惜這一個機會，以前我是被逼着要去讀書，而這次是我主動要去讀的。我知道我為什麼讀，我有清晰的目標和足夠的動力。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;img src=&quot;/post/62046/photo1.PNG&quot;&gt;
&lt;p&gt;昨天下午我準備去洗澡時，收到這個通知書。很好心，很期待在這可以學到很多的知識。我身邊與我同年齡的朋友都基本上畢業了一年了，而我卻還有兩年要去讀。我會好好珍惜這一個機會，以前我是被逼着要去讀書，而這次是我主
      
    
    </summary>
    
      <category term="生活點滴" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E9%BB%9E%E6%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>要開始Van Life？</title>
    <link href="http://yoursite.com//post/15662/"/>
    <id>http://yoursite.com//post/15662/</id>
    <published>2019-04-19T16:38:00.000Z</published>
    <updated>2019-04-21T04:54:30.760Z</updated>
    
    <content type="html"><![CDATA[<p>昨天舅舅舅媽帶我去看房車。由於昨天太陽很大，很熱，所以没有照很多相片。<br><img src="/post/15662/photo1.jpg"><br><img src="/post/15662/photo2.jpg"><br><img src="/post/15662/photo3.jpg"></p><p>房車有不同的長度，房車的內部間隔也有很多不同的選擇。哈哈，這是我第一次親身去看房車。挻有趣的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天舅舅舅媽帶我去看房車。由於昨天太陽很大，很熱，所以没有照很多相片。&lt;br&gt;&lt;img src=&quot;/post/15662/photo1.jpg&quot;&gt;&lt;br&gt;&lt;img src=&quot;/post/15662/photo2.jpg&quot;&gt;&lt;br&gt;&lt;img src=&quot;/post/15662/
      
    
    </summary>
    
      <category term="生活點滴" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E9%BB%9E%E6%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>她還好嗎？</title>
    <link href="http://yoursite.com//post/63041/"/>
    <id>http://yoursite.com//post/63041/</id>
    <published>2019-04-17T17:26:46.000Z</published>
    <updated>2019-04-18T00:22:36.988Z</updated>
    
    <content type="html"><![CDATA[<p>每快到我舅舅生日時，我就會想起她，因為他們是同一天生日的，都是4月18日。不知道她最近還好嗎？已經很久没有聽到有關她的消息了，很久没有和她聯繫了。(她不理我，哈哈)</p><p>I want what’s best for her!</p><p>哈哈，我早上的時候給她發了個新日快樂，下午的時候她居然回我的信息。很意外，好開心，哈哈。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;每快到我舅舅生日時，我就會想起她，因為他們是同一天生日的，都是4月18日。不知道她最近還好嗎？已經很久没有聽到有關她的消息了，很久没有和她聯繫了。(她不理我，哈哈)&lt;/p&gt;
&lt;p&gt;I want what’s best for her!&lt;/p&gt;
&lt;p&gt;哈哈，我早上的時候給她發
      
    
    </summary>
    
      <category term="生活點滴" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E9%BB%9E%E6%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>今天我煮飯，哈</title>
    <link href="http://yoursite.com//post/21374/"/>
    <id>http://yoursite.com//post/21374/</id>
    <published>2019-04-16T19:21:14.000Z</published>
    <updated>2019-04-16T19:28:59.816Z</updated>
    
    <content type="html"><![CDATA[<p>中午時在想，今晚該煮什麼東西吃。最後決定了晚餐就吃意粉吧。意粉算是最好煮的晚餐啦。<br><img src="/post/21374/photo1.PNG"><br><img src="/post/21374/photo2.PNG"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;中午時在想，今晚該煮什麼東西吃。最後決定了晚餐就吃意粉吧。意粉算是最好煮的晚餐啦。&lt;br&gt;&lt;img src=&quot;/post/21374/photo1.PNG&quot;&gt;&lt;br&gt;&lt;img src=&quot;/post/21374/photo2.PNG&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="生活點滴" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E9%BB%9E%E6%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>置頂</title>
    <link href="http://yoursite.com//post/4103/"/>
    <id>http://yoursite.com//post/4103/</id>
    <published>2019-04-16T06:40:13.000Z</published>
    <updated>2019-04-23T23:52:46.981Z</updated>
    
    <content type="html"><![CDATA[<h1 id="今天的計劃-4月17日"><a href="#今天的計劃-4月17日" class="headerlink" title="今天的計劃 (4月17日)"></a>今天的計劃 (4月17日)</h1><ul><li>寫一篇日記</li></ul><h1 id="今天完成的工作"><a href="#今天完成的工作" class="headerlink" title="今天完成的工作"></a>今天完成的工作</h1><ul><li>寫完了一個代碼</li></ul><h1 id="當前還需要建造的post"><a href="#當前還需要建造的post" class="headerlink" title="當前還需要建造的post:"></a>當前還需要建造的post:</h1><ul><li>Binary Tree筆記</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;今天的計劃-4月17日&quot;&gt;&lt;a href=&quot;#今天的計劃-4月17日&quot; class=&quot;headerlink&quot; title=&quot;今天的計劃 (4月17日)&quot;&gt;&lt;/a&gt;今天的計劃 (4月17日)&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;寫一篇日記&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=
      
    
    </summary>
    
      <category term="學習" scheme="http://yoursite.com/categories/%E5%AD%B8%E7%BF%92/"/>
    
    
  </entry>
  
  <entry>
    <title>2019年的目標與計劃(上半年)</title>
    <link href="http://yoursite.com//post/7944/"/>
    <id>http://yoursite.com//post/7944/</id>
    <published>2019-04-16T04:53:38.000Z</published>
    <updated>2019-04-18T00:29:18.286Z</updated>
    
    <content type="html"><![CDATA[<p>(小編正在建設中)<br><img src="/post/7944/photo.PNG"><br>今年年頭的時候給自己做了一個2019年的目標與計劃，我還專門做了一個ppt呢，這裡所有的圖都是我從那ppt上拿的。</p><img src="/post/7944/photo1.PNG"><p>我以前都没有為自己制定過目標和計劃，直到有一個前輩向我推薦了這一本書。現在回想起來，真的很感謝他。希望以後還有機會能再見到他，到時候我請他去吃飯去，哈哈。</p><h1 id="書籍介紹：《一生的計劃》"><a href="#書籍介紹：《一生的計劃》" class="headerlink" title="書籍介紹：《一生的計劃》"></a>書籍介紹：《一生的計劃》</h1><p>這本書有電子版中，有興趣的朋友上網一找再有了。這一本書主要是講制定目楆與計劃。注意：目楆和計劃不是同樣的東西喔。</p><ul><li>目標：你想要達到的結果</li><li>計劃：幫助你達到目標的具體藍圖</li></ul><h1 id="構成生活的主要方面"><a href="#構成生活的主要方面" class="headerlink" title="構成生活的主要方面"></a>構成生活的主要方面</h1><img src="/post/7944/photo2.PNG"><p>如果你不知道要為自己定什麼目楆的話，可以試從以上這四個方面想。</p><h1 id="之前我所定的目標與計劃"><a href="#之前我所定的目標與計劃" class="headerlink" title="之前我所定的目標與計劃"></a>之前我所定的目標與計劃</h1><img src="/post/7944/photo3.PNG"><p>注：自己根本没有去實行</p><p>哈哈，我的目標都白定了……最後，我這上半年的目標變為：學好這學期的4門課。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;(小編正在建設中)&lt;br&gt;&lt;img src=&quot;/post/7944/photo.PNG&quot;&gt;&lt;br&gt;今年年頭的時候給自己做了一個2019年的目標與計劃，我還專門做了一個ppt呢，這裡所有的圖都是我從那ppt上拿的。&lt;/p&gt;
&lt;img src=&quot;/post/7944/photo
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>節約用水的良方</title>
    <link href="http://yoursite.com//post/28294/"/>
    <id>http://yoursite.com//post/28294/</id>
    <published>2019-04-16T02:46:03.000Z</published>
    <updated>2019-04-16T04:59:03.909Z</updated>
    
    <content type="html"><![CDATA[<p>昨天我們家的熱水器壞了，所以被迫要洗一個冷水澡。我所住的地方晚上比較冷，所以水變的很冷。我記得昨天洗的澡是我從出生到現在用時最短的一次，不到兩分鐘。我想，如果我們家不去修這個熱水器的話，我們一年肯定能省很多的水……</p><p>另外，因為這一件事情，我才知道原來有些熱水器的加熱方法是：明火在底下燒……長見識了哈哈！</p><p>剛剛我和媽媽打了個電話，她說我們家的熱水器一直都是這樣的……原來我的觀察力差，好吧……</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天我們家的熱水器壞了，所以被迫要洗一個冷水澡。我所住的地方晚上比較冷，所以水變的很冷。我記得昨天洗的澡是我從出生到現在用時最短的一次，不到兩分鐘。我想，如果我們家不去修這個熱水器的話，我們一年肯定能省很多的水……&lt;/p&gt;
&lt;p&gt;另外，因為這一件事情，我才知道原來有些熱水器
      
    
    </summary>
    
      <category term="生活點滴" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E9%BB%9E%E6%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>Binary Tree筆記</title>
    <link href="http://yoursite.com//post/26965/"/>
    <id>http://yoursite.com//post/26965/</id>
    <published>2019-04-16T02:37:07.000Z</published>
    <updated>2019-04-22T20:47:42.811Z</updated>
    
    <content type="html"><![CDATA[<p>(建設中，請耐心等候)</p><p>哈哈，今天我想寫的東西是tree。tree是一種數據結構，在計算機的世界裡是很重要的。你問我有什麼具體用途？問的好，我就舉一個用途吧。這個tree可以用在寫一個compiler，你說是不是很有用呢，哈哈！</p><h1 id="tree的樣子"><a href="#tree的樣子" class="headerlink" title="tree的樣子"></a>tree的樣子</h1><img src="/post/26965/photo.PNG"><p>我們這個tree和平常在大自然中見到的tree樣子有一點點不一樣。主要分別是，我們這個是反的，最頂的是root，下面的是leaves。是不是很有趣呢？哈哈，我又在逗自己玩……</p><p>那些A、B、C、D，我們管他們叫node，你可以放東西在他們身上。</p><h1 id="什麼是Binary-Trees"><a href="#什麼是Binary-Trees" class="headerlink" title="什麼是Binary Trees"></a>什麼是Binary Trees</h1><ul><li>每一個node最多只能有兩個nodes。</li><li>A unique path exists form the root to every other node. (只有一條路，從root到其他的node)<img src="/post/26965/photo1.PNG"></li></ul><h1 id="Binary-search-tree"><a href="#Binary-search-tree" class="headerlink" title="Binary search tree"></a>Binary search tree</h1><p>這也是binary tree的一種，這有以下的兩個特點。</p><ol><li>Left child node is smaller than its parent node</li><li>right child node is greater than its parent node<img src="/post/26965/photo2.PNG"></li></ol><h1 id="Binary-tree的結構"><a href="#Binary-tree的結構" class="headerlink" title="Binary tree的結構"></a>Binary tree的結構</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span>&#123;</span></span><br><span class="line">ItemType info;</span><br><span class="line">TreeNode* left;</span><br><span class="line">TreeNode* right;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/post/26965/photo3.PNG"><h1 id="Searching-for-a-value"><a href="#Searching-for-a-value" class="headerlink" title="Searching for a value"></a>Searching for a value</h1><p>接下來要講的是searching的算法</p><p>以下的這個算法是<strong>不用recursion</strong>的</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">searchNoRecursion</span><span class="params">(node* leaf, <span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line"><span class="keyword">bool</span> found = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//這算法用while loop，不用recursion，從上向下找</span></span><br><span class="line"><span class="comment">//找不到的話，按key的大小去決定向左或是向右</span></span><br><span class="line"><span class="keyword">while</span>(leaf!=<span class="literal">NULL</span> &amp;&amp; !found)&#123;</span><br><span class="line"><span class="keyword">if</span>(key==leaf-&gt;key)&#123;</span><br><span class="line">found = <span class="literal">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (key&lt;leaf-&gt;key)</span><br><span class="line">leaf = leaf-&gt;left;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">leaf = leaf-&gt;right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> found;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以下的這個算法是<strong>用recursion</strong>的<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">searchRecursion</span><span class="params">(node* leaf, <span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line"><span class="keyword">bool</span> found = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(leaf!=<span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(key==leaf-&gt;key)&#123;</span><br><span class="line">found=<span class="literal">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(key&lt;leaf-&gt;key)</span><br><span class="line">found = searchRecursion(leaf-&gt;left,key); <span class="comment">//小的話向左下走</span></span><br><span class="line"><span class="keyword">else</span> <span class="comment">//大的話向右下走</span></span><br><span class="line">found = searchRecursion(leaf-&gt;right,key);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> found;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="Inserting-a-node"><a href="#Inserting-a-node" class="headerlink" title="Inserting a node"></a>Inserting a node</h1><p>以下的這個算法是Tail Recursive<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span> <span class="params">(node*&amp; leaf, <span class="keyword">int</span> item)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(leaf==<span class="literal">NULL</span>)&#123;</span><br><span class="line">leaf = <span class="keyword">new</span> node;</span><br><span class="line">leaf-&gt;right = <span class="literal">NULL</span>;</span><br><span class="line">leaf-&gt;left = <span class="literal">NULL</span>;</span><br><span class="line">leaf-&gt;key = item;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(item&lt;leaf-&gt;key)</span><br><span class="line">Insert(leaf-&gt;left,item);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">Insert(leaf-&gt;right,item);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>有很多不同的算法都可以實現insert，但個人來說比較喜歡用以上這個。</p><h1 id="Deleting-a-node"><a href="#Deleting-a-node" class="headerlink" title="Deleting a node"></a>Deleting a node</h1><p>尋求要刪除的node。一但找到之後，會有以下三個可能出現的情況。</p><ol><li>這個node没有children (leaf node)<ul><li>直接刪，然後叫node的parent指向null</li></ul></li><li>這個Node有一個child<ul><li>將這個node指向要被刪的那node的parent</li><li>刪除那個node</li></ul></li><li>這個Node有兩個children (這有兩個選擇，但我只列其中的一個)<ul><li>去右邊的那child，然後去到底。(去右邊找最小值)</li><li>將這個值放到我們本來要刪的那個node</li><li>刪了那個最低的child</li></ul></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">node* <span class="title">deleteNode</span><span class="params">(node* root, <span class="keyword">int</span> data)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(root == <span class="literal">NULL</span>) <span class="keyword">return</span> root;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(data &lt; root-&gt;data) root-&gt;left = deleteNode(root-&gt;left,data);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (data &gt; root-&gt;data) root-&gt;right = deleteNode(root-&gt;right,data);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Case 1 </span></span><br><span class="line"><span class="keyword">if</span>(root-&gt;left == <span class="literal">NULL</span> &amp;&amp; root-&gt;right == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="keyword">delete</span> root;</span><br><span class="line">root = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//Case 2</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(root-&gt;left == <span class="literal">NULL</span>) &#123;</span><br><span class="line">node *temp = root;</span><br><span class="line">root = root-&gt;right;</span><br><span class="line"><span class="keyword">delete</span> temp;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(root-&gt;right == <span class="literal">NULL</span>) &#123;</span><br><span class="line">node *temp = root;</span><br><span class="line">root = root-&gt;left;</span><br><span class="line"><span class="keyword">delete</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// case 3</span></span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">node *temp = FindMin(root-&gt;right);</span><br><span class="line">root-&gt;data = temp-&gt;data;</span><br><span class="line">root-&gt;right = deleteNode(root-&gt;right,temp-&gt;data);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Depth-First-traversal"><a href="#Depth-First-traversal" class="headerlink" title="Depth-First traversal"></a>Depth-First traversal</h1><p>這裡有三種depth-first traversal: pre-order, in-order and post-order。 </p><h2 id="Pre-order"><a href="#Pre-order" class="headerlink" title="Pre-order"></a>Pre-order</h2><pre><code>1. Visit the root.2. Traverse the left subtree.3. Traverse the right subtree.</code></pre><h2 id="In-order"><a href="#In-order" class="headerlink" title="In-order"></a>In-order</h2><pre><code>1. Traverse the left subtree.2. Visit the root.3. Traverse the right subtree.</code></pre><h2 id="Post-order"><a href="#Post-order" class="headerlink" title="Post-order"></a>Post-order</h2><pre><code>1. Traverse the left subtree.2. Traverse the right subtree.3. Visit the root.</code></pre><p>這三種算法的結構是一樣的，唯一不同的只是次序。所以我在下面就只寫其中一個。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">preOrder</span><span class="params">(node* root)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(root != <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,root-&gt;key);</span><br><span class="line">preOrder(root-&gt;left);</span><br><span class="line">preOrder(root-&gt;right);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;(建設中，請耐心等候)&lt;/p&gt;
&lt;p&gt;哈哈，今天我想寫的東西是tree。tree是一種數據結構，在計算機的世界裡是很重要的。你問我有什麼具體用途？問的好，我就舉一個用途吧。這個tree可以用在寫一個compiler，你說是不是很有用呢，哈哈！&lt;/p&gt;
&lt;h1 id=&quot;tre
      
    
    </summary>
    
      <category term="學習" scheme="http://yoursite.com/categories/%E5%AD%B8%E7%BF%92/"/>
    
    
      <category term="data structure" scheme="http://yoursite.com/tags/data-structure/"/>
    
      <category term="tree" scheme="http://yoursite.com/tags/tree/"/>
    
  </entry>
  
  <entry>
    <title>反思-有關於blog和oneNote</title>
    <link href="http://yoursite.com//post/28114/"/>
    <id>http://yoursite.com//post/28114/</id>
    <published>2019-04-16T01:33:09.000Z</published>
    <updated>2019-04-16T02:42:35.524Z</updated>
    
    <content type="html"><![CDATA[<p>自我買了surface pro之後，我就開始用oneNote去做筆記。</p><h1 id="我oneNote筆記的大致結構"><a href="#我oneNote筆記的大致結構" class="headerlink" title="我oneNote筆記的大致結構"></a>我oneNote筆記的大致結構</h1><img src="/post/28114/photo.PNG"><p>我有一個section是叫做log，專門用來記錄每一週所要完成的任務。我這學期所上的每一門課都有自己的section。</p><img src="/post/28114/photo2.PNG"><p>從上面這個圖可以看到，我的筆記是按週來分類的。</p><h1 id="反思什麼？"><a href="#反思什麼？" class="headerlink" title="反思什麼？"></a>反思什麼？</h1><p>我在反思什麼呢？哈哈，我就是在想blog裡的東西會不會和oneNote裡的東西有重疊。我是假設没有人會知道我的這一個blog，所以這個blog的期待讀客也就只有我一個。在這一方面，blog和oneNote是一樣的，都是為自己而寫的。</p><p>嗯，想了一下之後。我發現，我還是希望有人不經意會發現這個blog，哈哈。如果我没有這個想法的話，那我應該是直接用oneNote就好了。這一篇很像廢話……但是我自己玩的開心就好，哈哈。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;自我買了surface pro之後，我就開始用oneNote去做筆記。&lt;/p&gt;
&lt;h1 id=&quot;我oneNote筆記的大致結構&quot;&gt;&lt;a href=&quot;#我oneNote筆記的大致結構&quot; class=&quot;headerlink&quot; title=&quot;我oneNote筆記的大致結構&quot;&gt;&lt;/
      
    
    </summary>
    
      <category term="學習" scheme="http://yoursite.com/categories/%E5%AD%B8%E7%BF%92/"/>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
      <category term="oneNote" scheme="http://yoursite.com/tags/oneNote/"/>
    
  </entry>
  
  <entry>
    <title>Hexo Blog的useful Links</title>
    <link href="http://yoursite.com//post/37442/"/>
    <id>http://yoursite.com//post/37442/</id>
    <published>2019-04-16T00:39:57.000Z</published>
    <updated>2019-04-16T01:31:37.813Z</updated>
    
    <content type="html"><![CDATA[<p>由於現在會經常去寫blog，所以在這留幾個可能我以後會用到的links。</p><ul><li><a href="https://markdown.tw/" target="_blank" rel="noopener">https://markdown.tw/</a></li><li><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">https://hexo.io/zh-cn/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;由於現在會經常去寫blog，所以在這留幾個可能我以後會用到的links。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://markdown.tw/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://markdown.tw/&lt;/a&gt;&lt;
      
    
    </summary>
    
      <category term="學習" scheme="http://yoursite.com/categories/%E5%AD%B8%E7%BF%92/"/>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>雪球速讀法(非讀後感)......</title>
    <link href="http://yoursite.com//post/55058/"/>
    <id>http://yoursite.com//post/55058/</id>
    <published>2019-04-15T22:05:19.000Z</published>
    <updated>2019-04-16T00:35:35.560Z</updated>
    
    <content type="html"><![CDATA[<p>在前幾天，我在網上看到一本書叫《雪球速讀法》。我其實没有真的看過這一本書，我只是看了一下別人做的一個總結。覺得挻有趣的，所以在這記錄一下。</p><h1 id="雜學資料庫"><a href="#雜學資料庫" class="headerlink" title="雜學資料庫"></a>雜學資料庫</h1><p>雪球速讀法中一個重要的概念是雜學資料庫。雜學資料庫就是我們過住所累積的知識。</p><p>我們閱讀的速度是跟我們自身的雜學資料庫有直接的關係。請看以下的例子。</p><ul><li>第二次去讀同一本書，速度都比較快</li><li>xx major畢業的，讀xx major的書會比較快</li></ul><p>這個讀書法就像滾雪球一樣，愈滾愈大。(像馬太效應)</p><h1 id="具體的技巧"><a href="#具體的技巧" class="headerlink" title="具體的技巧"></a>具體的技巧</h1><p>以30分鐘為看一本的目標，花3分之2的時候去了解整本書的結構。最後選你有興趣的地方看。簡單來說，就是一次看書時，請花多一點時間在目錄上，個人認為最好能把比較多的結構背下來。</p><h1 id="個人小小的感想"><a href="#個人小小的感想" class="headerlink" title="個人小小的感想"></a>個人小小的感想</h1><p>現在市面有很多有關速讀的書，我猜可以是因為現在處於一個信息爆炸的時代吧。 但是我們不能為了快而快，有時候，慢才是快。我們在重視的不是速度，而是效率。讀過一本書的定義是：你能跟人簡述一下那本書的內容。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在前幾天，我在網上看到一本書叫《雪球速讀法》。我其實没有真的看過這一本書，我只是看了一下別人做的一個總結。覺得挻有趣的，所以在這記錄一下。&lt;/p&gt;
&lt;h1 id=&quot;雜學資料庫&quot;&gt;&lt;a href=&quot;#雜學資料庫&quot; class=&quot;headerlink&quot; title=&quot;雜學資料庫
      
    
    </summary>
    
      <category term="學習" scheme="http://yoursite.com/categories/%E5%AD%B8%E7%BF%92/"/>
    
    
  </entry>
  
  <entry>
    <title>我會在這Blog上寫些什麼？</title>
    <link href="http://yoursite.com//post/36504/"/>
    <id>http://yoursite.com//post/36504/</id>
    <published>2019-04-15T19:56:46.000Z</published>
    <updated>2019-04-16T04:05:48.778Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我寫blog的動機、原因"><a href="#我寫blog的動機、原因" class="headerlink" title="我寫blog的動機、原因"></a>我寫blog的動機、原因</h1><p>一閞始(約4個月前)我想寫blog的原因是為了將來好找工作。但是我很快就失去了動力，然後就没堅持下去。  </p><p>這一次，我寫blog，没有很明確的目的……只是為了自己開心，而去寫的。如果硬要找一個原因的話，我覺得可能是因為孤獨。不知道從什麼時候開始，我就不太跟朋友聯繫，過了一段時間之後，我發現我可能一個月才會和一些朋友去聊一下天。我想，我寫blog的原因，應該是為了滿足自己想說話，想表達自己的這一個很人類的需要吧。</p><h1 id="我會在這寫些什麼？"><a href="#我會在這寫些什麼？" class="headerlink" title="我會在這寫些什麼？"></a>我會在這寫些什麼？</h1><p>我會在這寫任何的東西，學習的，生活的。這一個blog的定位就是没有定位，哈哈。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;我寫blog的動機、原因&quot;&gt;&lt;a href=&quot;#我寫blog的動機、原因&quot; class=&quot;headerlink&quot; title=&quot;我寫blog的動機、原因&quot;&gt;&lt;/a&gt;我寫blog的動機、原因&lt;/h1&gt;&lt;p&gt;一閞始(約4個月前)我想寫blog的原因是為了將來好找工作。
      
    
    </summary>
    
      <category term="生活點滴" scheme="http://yoursite.com/categories/%E7%94%9F%E6%B4%BB%E9%BB%9E%E6%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>Four Essential Features of Object-Oriented Programming (Unfinished)</title>
    <link href="http://yoursite.com//post/64433/"/>
    <id>http://yoursite.com//post/64433/</id>
    <published>2018-12-30T04:00:40.000Z</published>
    <updated>2019-04-16T04:42:04.723Z</updated>
    
    <content type="html"><![CDATA[<p>(爛尾了，哈哈)</p><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>There are four core concepts in object-oriented programming. They are encapsulation, abstraction, inheritance and polymorphism.  </p><p>In OOP, program consists of a set of objects. </p><img src="/post/64433/Sketch002.jpg"><p>In the world of OOP, almost everything is an object. </p><p>Let’s look at the following example. Sorry for the ugly drawing.<br><img src="/post/64433/Sketch003.jpg"></p><p>This example is going to show the power of object-oriented programming. Let’s imagine that you are asked to make a car. Then, you will start to think what are the components of a car. Battery, axle, brakes, doors, windows, these are the examples of components. In object-oriented programming, we call these component objects. </p><p><strong>Object</strong></p><blockquote><p>A object is an entity that contains data and methods. </p></blockquote><p>Note: object can also be the data of other objects.</p><p>Every object contains data and methods.</p> <img src="/post/64433/Sketch004.jpg"><p><strong>Data</strong></p><blockquote><p>Information that stored in an object.</p></blockquote><p><strong>Method</strong></p><blockquote><p>actions that an object can do. </p></blockquote><p>Note: There is difference between classes and instances. classes is the blueprints for new object, while instance is the object that is created from its blueprint(class). </p><h1 id="Encapsulation"><a href="#Encapsulation" class="headerlink" title="Encapsulation"></a>Encapsulation</h1><blockquote><p>Hiding the implementation details of an object. </p></blockquote><p>To understand the concept of encapsulation, recall the analogy of cars as objects. </p><h2 id="Benefit-of-Encapsulation"><a href="#Benefit-of-Encapsulation" class="headerlink" title="Benefit of Encapsulation"></a>Benefit of Encapsulation</h2><ul><li>to protect program data</li><li>clients can use the program without any understanding of the implementation details</li></ul><h1 id="Abstraction"><a href="#Abstraction" class="headerlink" title="Abstraction"></a>Abstraction</h1><h1 id="Inheritance"><a href="#Inheritance" class="headerlink" title="Inheritance"></a>Inheritance</h1><h1 id="Polymorphism"><a href="#Polymorphism" class="headerlink" title="Polymorphism"></a>Polymorphism</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;(爛尾了，哈哈)&lt;/p&gt;
&lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;There are four
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Reference or Pointer in Object-Oriented Programming (Unfinished)</title>
    <link href="http://yoursite.com//post/32135/"/>
    <id>http://yoursite.com//post/32135/</id>
    <published>2018-12-28T17:23:15.000Z</published>
    <updated>2019-04-16T04:48:36.823Z</updated>
    
    <content type="html"><![CDATA[<p>(爛尾了，不刪了，給個紀念，哈哈)</p><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>Reference or pointer is a very important concept in object-oriented programming. Reference and pointer are kinds of the same concept just with different names. The following discussion will begin with a single line of code.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Human daniel = <span class="keyword">new</span> Human();</span><br></pre></td></tr></table></figure><p>related post: <a href="/post/64433">Four Core Features of Object-Oriented Programming</a></p><h1 id="Object-Oriented-Programming-OOP"><a href="#Object-Oriented-Programming-OOP" class="headerlink" title="Object-Oriented Programming (OOP)"></a>Object-Oriented Programming (OOP)</h1><p>Object-Oriented programming is a new approach to programming. Instead of giving a set of actions to a program (procedural programming), we use objects to be the building block of the whole program.</p><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h1 id="Example-in-Java"><a href="#Example-in-Java" class="headerlink" title="Example in Java"></a>Example in Java</h1><p>The following statement is an example of how you create an object in java.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Human daniel = <span class="keyword">new</span> Human();</span><br></pre></td></tr></table></figure><p>To create a new object in java, it involves the use of the keyword <strong>new</strong> to allocate the memory space of the object and the use of the object’s constructor, <strong>Human()</strong> in this case, to initialize the space. </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;(爛尾了，不刪了，給個紀念，哈哈)&lt;/p&gt;
&lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;Refer
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Common Markdown Syntax</title>
    <link href="http://yoursite.com//post/47652/"/>
    <id>http://yoursite.com//post/47652/</id>
    <published>2018-12-28T06:29:50.000Z</published>
    <updated>2019-04-16T04:48:42.216Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>Markdown is a markup language with plain text formatting syntax. The two most popular usages of markdown are formatting readme files and writing posts in online forums. If you are going to be a software engineer in the future, you will use markdown a lot. </p><p>reason for writing this: for my to learn markdown + want to post something on my blog. lol</p><h1 id="Basic-Syntax"><a href="#Basic-Syntax" class="headerlink" title="Basic Syntax"></a>Basic Syntax</h1><h2 id="Headings"><a href="#Headings" class="headerlink" title="Headings"></a>Headings</h2><p>Adding # in front of a word or phrase will create a heading. There are six heading level. The number of # that in front of a word or phrase represents the level of the heading.<br>note: level 1 has the largest font size.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Heading level 1</span><br><span class="line">## Heading level 2</span><br><span class="line">### Heading level 3</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">###### Heading level 6</span><br></pre></td></tr></table></figure></p><p>some of the blog frameworks would even automatically generate the tables of content for you according to the headings that you used.</p><img src="/post/47652/image2.png"><h2 id="Emphasis"><a href="#Emphasis" class="headerlink" title="Emphasis"></a>Emphasis</h2><p>There are two types of emphasis(I am not sure whether there are more) that you can add to the text: bold and italic.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*italic*</span><br><span class="line">**bold**</span><br><span class="line">***bold and italic***</span><br><span class="line">~~strikethrough~~</span><br></pre></td></tr></table></figure><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><p>There two types of list: ordered list and unordered list.</p><h3 id="Ordered-list"><a href="#Ordered-list" class="headerlink" title="Ordered list"></a>Ordered list</h3><p>What you need to do to make an ordered list is to add numbers followed by periods.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. item 1</span><br><span class="line">2. item 2</span><br><span class="line">3. item 3</span><br></pre></td></tr></table></figure></p><h3 id="Unordered-list"><a href="#Unordered-list" class="headerlink" title="Unordered list"></a>Unordered list</h3><p>To make a unordered list, you need to add a <strong>-</strong> in front of the items.<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">- item 1</span><br><span class="line">- item 2</span><br><span class="line">- item 3</span><br></pre></td></tr></table></figure></p><h2 id="Blockquotes"><a href="#Blockquotes" class="headerlink" title="Blockquotes"></a>Blockquotes</h2><p>To make a Blockquote, you need to add a <strong>&gt;</strong> in front of a paragraph. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; paragraph</span><br><span class="line"></span><br><span class="line">or </span><br><span class="line"></span><br><span class="line">&gt;multiple paragraph</span><br><span class="line">&gt;</span><br><span class="line">&gt;multiple paragraph</span><br></pre></td></tr></table></figure><h2 id="Horizontal-Rules"><a href="#Horizontal-Rules" class="headerlink" title="Horizontal Rules"></a>Horizontal Rules</h2><p>To make a horizontal rule, use three or more ***.</p><h2 id="image"><a href="#image" class="headerlink" title="image"></a>image</h2><p>To insert a picture, use the following syntax.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![alt text](link of the picture)</span><br></pre></td></tr></table></figure><p>If you also use Hexo to build your blog, I recommend you to use asset folders to upload your pictures.<br>It is easier to manage your pictures by using asset folders. </p><p>More Info:  <a href="https://hexo.io/docs/asset-folders.html" target="_blank" rel="noopener">Asset Folders - Hexo</a></p><h2 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h2><p>To insert a link, use the following syntax.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[alt text](link)</span><br></pre></td></tr></table></figure><p>Note: it looks like serting a picture, but they are different!</p><h2 id="Code-Block"><a href="#Code-Block" class="headerlink" title="Code Block"></a>Code Block</h2><p>Nearly forget to mention the code block feature.</p><img src="/post/47652/image1.png"><p>These are the common features I use for writing my blog.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h1&gt;&lt;p&gt;Markdown is a markup language 
      
    
    </summary>
    
    
  </entry>
  
</feed>
