{"meta":{"title":"Daniel's Farmland","subtitle":"Go to the ant, you sluggard, consider its ways and be wise!","description":null,"author":"Daniel Lau","url":"http://yoursite.com","root":"/"},"posts":[{"title":"Single Variable Calculus - 介紹 (1)","date":"2019-06-29T05:26:31.000Z","path":"/post/33193/","content":"<h1 id=\"這是什麼？\"><a href=\"#這是什麼？\" class=\"headerlink\" title=\"這是什麼？\"></a>這是什麼？</h1><p>這是一門MIT的公開課，是Calculus的第一門課。這是免費的，而是人人都可以去學。<br>以下是個公開課的Link，有興趣的朋友可以去看看。<br>link for the course: <a href=\"https://ocw.mit.edu/courses/mathematics/18-01sc-single-variable-calculus-fall-2010/index.htm\" target=\"_blank\" rel=\"noopener\">Single Variable Calculus</a></p>\n<h1 id=\"為什麼這個？\"><a href=\"#為什麼這個？\" class=\"headerlink\" title=\"為什麼這個？\"></a>為什麼這個？</h1><p>大學叫這門課Cal 1，我其實早在幾年前就已經在大學裡修過這門課了，但具體內容早就忘光了。幾天前認識了一個在早稻田大學的計算機博士，他是研究AI的。有幸跟他聊了一下關於AI的東西，知道了研究AI需要頗為紮實的數學根基。所以我就打算在這個假期去重新學一下數學。</p>\n<h1 id=\"Big-picture-of-this-course\"><a href=\"#Big-picture-of-this-course\" class=\"headerlink\" title=\"Big picture of this course\"></a>Big picture of this course</h1><p>這門課分為五個部分。見下圖。<br><img src=\"/post/33193/photo1.PNG\"></p>\n<h1 id=\"目錄\"><a href=\"#目錄\" class=\"headerlink\" title=\"目錄\"></a>目錄</h1>","permalink":"http://yoursite.com/post/33193/","categories":[],"tags":[{"name":"Single Variable Calculus","slug":"Single-Variable-Calculus","permalink":"http://yoursite.com/tags/Single-Variable-Calculus/"}]},{"title":"兩年計劃","date":"2019-06-26T04:18:08.000Z","path":"/post/10641/","content":"<p>這幾天都在看計算機的東西，也看了一些關於找工作的YouTube videos。特別是看完這些有關找工作的videos後，我心裡產生了強烈的不安和焦慮。現在要在美國找份software engineer的工作，隨隨便便都要經過5、6輪面試。多輪面試意味着，見工者必需具有真才實學，難以蒙混過關。</p>\n<p>既然找工作要真才實學，那我只好在這一段時間內好好去裝備自己。</p>\n<p>由於還有兩年就要畢業了，所以就叫這計劃兩年計劃。</p>\n<p>計劃內容(會更新)：</p>\n<ul>\n<li>每天刷一題leetcode</li>\n<li>一有空就寫一些程序 (什麼叫一有空？什麼叫一些？……我也覺得這說的很不具體，但的確不敢寫具體的)</li>\n<li>學習別人的原碼，做筆記</li>\n</ul>\n<p>希望自己這兩年能堅持的去學習，不要鬆懈。加油！</p>\n","permalink":"http://yoursite.com/post/10641/","categories":[{"name":"學習","slug":"學習","permalink":"http://yoursite.com/categories/學習/"}],"tags":[{"name":"計劃","slug":"計劃","permalink":"http://yoursite.com/tags/計劃/"}]},{"title":"學習方法的反思","date":"2019-06-20T00:33:36.000Z","path":"/post/29092/","content":"<p>最近認識了一個朋友。我在她的blog上看到了一個叫”瞎逼叨”的系列，覺得非常的有趣。現在我也開始學習她去寫一些瞎逼叨的東西，嘻嘻。</p>\n<p>身為一學生，逼叨有關學習的東西，總是比逼叨其他subjects來的簡單。瞎逼叨系列就從”學習”開始吧。</p>\n<p>我學習是帶有一個目標的，我的目標是在計算機的某領域達到大師級的水平。為什麼要成為大師級呢？成為某領域的大牛，其實是有很多好處的，而且會使你更喜歡這個領域，更喜歡你現在所學所做的東西，就像雪球效應一樣。我個人來說，不太同意追求盲目地去自己的passion。有一本書專門是說不要盲目的追求自己的passion，而是專心在一領域中成為大師級的大物。這書是叫so good they can’t ignore you，非常有意思的書，在這安利給大家看喔。你或許會說，追求自己的passion和成為某領域的大牛，兩者之間没有什麼衝突，但作者說這兩者其實是兩個不同的mindset，會在下意識中影響人的行為和心情。雖然這兩個mindset看似差不來，但卻差之毫厘，失之千里。關於這書上的東西，我就不在這詳細說了，有興趣的朋友，歡迎自己去找這本書來看喔。這絶對是一本life changing的書。</p>\n<p>好了，我學習的目標已經確定了，接下來要做的就是去制定一個計劃使我可以達成目標。說到要成為大師的學習方法，這裡有一個著名的定律叫一萬小時定律。這一萬小時定律，簡單粗暴，說只要你在某領域刻意練習一萬個小時，就可以為成大師了。哇，這不就是我想要的結果嗎？現在方法也確定好了，就是採用大量練習的原理，使我達到大師的水平。</p>\n<p>身為一個常常自我懷疑的人，我當然忍不住在google一下這一萬小時定律(以前看過這出處的書，但現在都忘光了，所以又google了一遍)。我在google的結果中發現了一個叫”一萬小時天才法則致命漏洞”的文章。什麼，這居然還有bug？點進去看了一下，這個bug就是不正確的練習。簡單來說，”量”和”質”同等重要，不以為”量”達到了一個小時後，你就能成為大師，這還得看你平時練習的”質”如何。打個比方說，你平時學習是追着劇學的，而且一遇到難的地方就跳過，不去思考。這樣的學習質量，就算是投放了一萬小時，或是二萬小時，也不一定能有專家級的水平。</p>\n<p>一萬個小時很容易量化，學習計時的軟件，隨使搜也是一大堆。要統計自己學習的時數，這還是比較容易的，人自律一點就行。但是這個學習的”質”，的確是比”量”難去量代，總不能去列一大堆的評分標準，然後天天給自己的學習質量打分吧。如果這樣的話，也太痛苦了……</p>\n<p>我現在採取了一個小小的方法來粗糙的衡量自己的學習質量。就是看我在學習時有没有struggling的感覺。我認為如果一個人在學習的過程中，完全没有struggling的感覺(就是感覺到不用腦子就得學習)，那麼是次學習就可以被判定為質量不如理想。為何我會認為有較的學習是該有struggling的感覺呢？我認為學習是一個技能，是一種能力(像是閱讀的速度，記憶的能力，思考的能力等等)，我見也有人把這稱為學習力。如果學習是一種能力的話，那麼就存在着提高能力的方法。任何提高能力的原理都大同小異，無非是超越自己舊有的極限。struggling的感覺，就是在你挑戰自己極限時所產生的感覺。假如你現在在學一樣東西，而你在這學習的過程完全没有感到struggling，那麼我會懷疑你遇到以下這幾種可能的情況。</p>\n<ul>\n<li>你在學你已經會的東西</li>\n<li>你没有突破自己的極限，按着自己的能力去制定合適的學習計劃</li>\n</ul>\n<p>今天的瞎逼叨就到這吧，不逼叨太長了。</p>\n","permalink":"http://yoursite.com/post/29092/","categories":[{"name":"學習","slug":"學習","permalink":"http://yoursite.com/categories/學習/"}],"tags":[{"name":"瞎逼叨","slug":"瞎逼叨","permalink":"http://yoursite.com/tags/瞎逼叨/"}]},{"title":"日記 - 061319","date":"2019-06-13T23:20:15.000Z","path":"/post/27181/","content":"<h1 id=\"申請信用卡\"><a href=\"#申請信用卡\" class=\"headerlink\" title=\"申請信用卡\"></a>申請信用卡</h1><p>今天試了去申請兩張信用卡，試了兩個信用卡公司。一個是American Express，另一個是Discovery。American Express的那一個要我提交更多的資料。而Discovery那個就直接批了。 我打算暫時不理American Express的那申請，等以後就去弄吧。</p>\n<img src=\"/post/27181/photo1.JPG\">\n<p>現在這個卡的信用額並不高，只有$1750，可以拿這交一下醫療保險。 申請信用卡的過程比我所想像的更順利，好開心。 以後的學費，就是打算去用信用卡去交的。這麼的話，兩年之後，我就會有一個挻好的credit score了。 </p>\n<p>Credit Score這東西在美國是特別重要的，所以有想以後留美工作或生活的朋友，要多多留意自己的credit。</p>\n<p>忘了提一件事，我這信用卡是朋友refer我的，所以我們倆都可以拿50刀。嘻嘻，挻開心的。</p>\n<h1 id=\"黑客與畫家\"><a href=\"#黑客與畫家\" class=\"headerlink\" title=\"黑客與畫家\"></a>黑客與畫家</h1><p>昨天我發現我的朋友在看這一本書，所以我昨天也跟着去看了。覺得挻好趣的，現在每天都會抽出一點的時間去看這一本書，並做一下筆記。</p>\n","permalink":"http://yoursite.com/post/27181/","categories":[{"name":"生活點滴","slug":"生活點滴","permalink":"http://yoursite.com/categories/生活點滴/"}],"tags":[]},{"title":"IPA - 筆記","date":"2019-06-12T20:33:14.000Z","path":"/post/43097/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>IPA指的是International Phonetic Alphabet，也就是國際音標。學這的原因：改善英語發音，讓自已可以更加準確的表達。</p>\n<h1 id=\"元音\"><a href=\"#元音\" class=\"headerlink\" title=\"元音\"></a>元音</h1><p>英語共有24個元音。元音與輔音的分別是，元音是要振動聲帶的。</p>\n<h2 id=\"1-i-單元音\"><a href=\"#1-i-單元音\" class=\"headerlink\" title=\"1. [i]單元音\"></a>1. [i]單元音</h2><img src=\"/post/43097/photo1.JPG\">\n<p>發音特點：</p>\n<ul>\n<li>長音</li>\n<li>發音類似”衣”</li>\n</ul>\n<p>單詞：</p>\n<ul>\n<li>eat</li>\n<li>need </li>\n<li>thief</li>\n<li>heat </li>\n<li>sheep</li>\n</ul>\n<h2 id=\"2-I-單元音\"><a href=\"#2-I-單元音\" class=\"headerlink\" title=\"2. [I]單元音\"></a>2. [I]單元音</h2><img src=\"/post/43097/photo2.JPG\">\n<p>發音特點：</p>\n<ul>\n<li>短音</li>\n<li>嘴張的比發[i]的開</li>\n</ul>\n<p>單詞：</p>\n<ul>\n<li>sit</li>\n<li>fit</li>\n<li>give</li>\n<li>six</li>\n<li>pig</li>\n</ul>\n<h2 id=\"3-e-雙元音\"><a href=\"#3-e-雙元音\" class=\"headerlink\" title=\"3. [e]雙元音\"></a>3. [e]雙元音</h2><img src=\"/post/43097/photo3.JPG\">\n<p>發音特點：</p>\n<ul>\n<li>先發[ɛ]，再發[I]，中問不停頓</li>\n</ul>\n<p>單詞：</p>\n<ul>\n<li>lake</li>\n<li>make</li>\n<li>later</li>\n<li>plane</li>\n<li>main</li>\n<li>train</li>\n<li>saint</li>\n</ul>\n<h2 id=\"4-e-單元音\"><a href=\"#4-e-單元音\" class=\"headerlink\" title=\"4. [ɛ]單元音\"></a>4. [ɛ]單元音</h2><img src=\"/post/43097/photo4.JPG\">\n<p>發音特點：</p>\n<ul>\n<li>嘴巴比發[I]更開</li>\n<li>舌平放，抵住下齒</li>\n</ul>\n<p>單詞：</p>\n<ul>\n<li>bed</li>\n<li>let</li>\n<li>pen</li>\n<li>set</li>\n<li>sex</li>\n<li>beg</li>\n</ul>\n<h2 id=\"5-ae-雙元音\"><a href=\"#5-ae-雙元音\" class=\"headerlink\" title=\"5. [æ]雙元音\"></a>5. [æ]雙元音</h2><img src=\"/post/43097/photo5.JPG\">\n<p>發音特點：</p>\n<ul>\n<li>嘴張大</li>\n<li>下巴盡量住下拉</li>\n<li>和平放，抵住下齒</li>\n</ul>\n<p>單詞：</p>\n<ul>\n<li>bad</li>\n<li>dad</li>\n<li>matter</li>\n<li>bag</li>\n<li>land</li>\n<li>black</li>\n<li>cap</li>\n<li>ax</li>\n</ul>\n<h2 id=\"6-ɑ-單元音\"><a href=\"#6-ɑ-單元音\" class=\"headerlink\" title=\"6. [ɑ]單元音\"></a>6. [ɑ]單元音</h2><img src=\"/post/43097/photo6.JPG\">\n<p>發音特點：</p>\n<ul>\n<li>發音像是”啊”</li>\n<li>嘴巴張開，像個大圓圈</li>\n<li>舌平放，舌尖不抵下齒</li>\n</ul>\n<p>單詞：</p>\n<ul>\n<li>lock</li>\n<li>hot </li>\n<li>stop</li>\n<li>block</li>\n<li>cop</li>\n<li>ox</li>\n</ul>\n<h2 id=\"7-ar-雙元音\"><a href=\"#7-ar-雙元音\" class=\"headerlink\" title=\"7. [ar]雙元音\"></a>7. [ar]雙元音</h2><img src=\"/post/43097/photo7.JPG\">\n<p>發音特點：</p>\n<ul>\n<li>發[a]時嘴巴不全開，因後面要發[r]</li>\n<li>[r]要卷舌</li>\n</ul>\n<p>單詞：</p>\n<ul>\n<li>hard</li>\n<li>artist</li>\n<li>far</li>\n<li>car</li>\n<li>park</li>\n<li>Mars</li>\n</ul>\n<h2 id=\"8-o-單元音\"><a href=\"#8-o-單元音\" class=\"headerlink\" title=\"8. [ɔ]單元音\"></a>8. [ɔ]單元音</h2><img src=\"/post/43097/photo8.JPG\">\n<p>發音特點：</p>\n<ul>\n<li>發音像公雞的”喔”</li>\n</ul>\n<p>單詞：</p>\n<ul>\n<li>law</li>\n<li>saw</li>\n<li>hall</li>\n<li>saw</li>\n<li>tall</li>\n</ul>\n<h2 id=\"9-or-雙元音\"><a href=\"#9-or-雙元音\" class=\"headerlink\" title=\"9. [ɔr]雙元音\"></a>9. [ɔr]雙元音</h2><img src=\"/post/43097/photo9.JPG\">\n<p>發音特點：</p>\n<ul>\n<li>先發[ɔ]，後發[r]</li>\n</ul>\n<p>單詞：</p>\n<ul>\n<li>born</li>\n<li>for</li>\n<li>warning</li>\n</ul>\n<h2 id=\"10-oɪ-雙元音\"><a href=\"#10-oɪ-雙元音\" class=\"headerlink\" title=\"10. [ɔɪ]雙元音\"></a>10. [ɔɪ]雙元音</h2><img src=\"/post/43097/photo10.JPG\">\n<p>發音特點：</p>\n<ul>\n<li>像是”喔”及”衣”連在一起</li>\n<li>常出現在有”oi”和”oy”的字</li>\n</ul>\n<p>單詞：</p>\n<ul>\n<li>coin</li>\n<li>noise </li>\n<li>point</li>\n<li>boy</li>\n<li>joy</li>\n<li>oyster</li>\n<li>toy</li>\n</ul>\n<h2 id=\"11-o-雙元音\"><a href=\"#11-o-雙元音\" class=\"headerlink\" title=\"11. [o]雙元音\"></a>11. [o]雙元音</h2><img src=\"/post/43097/photo11.JPG\">\n<p>發音特點：</p>\n<ul>\n<li>先發[ə]，後發[ʊ]</li>\n<li>像是中文的”歐”</li>\n</ul>\n<p>單詞：</p>\n<ul>\n<li>coat </li>\n<li>soap</li>\n<li>open</li>\n<li>bowl</li>\n<li>coal </li>\n</ul>\n<h2 id=\"12-u-單元音\"><a href=\"#12-u-單元音\" class=\"headerlink\" title=\"12. [u]單元音\"></a>12. [u]單元音</h2><img src=\"/post/43097/photo12.JPG\">\n<p>發音特點：</p>\n<ul>\n<li>上下唇微微噘起</li>\n<li>像是中文的”烏”</li>\n</ul>\n<p>單詞：</p>\n<ul>\n<li>too</li>\n<li>mood</li>\n<li>food</li>\n<li>soon</li>\n<li>do</li>\n<li>cool </li>\n<li>fool</li>\n</ul>\n<h2 id=\"13-ʊ-單元音\"><a href=\"#13-ʊ-單元音\" class=\"headerlink\" title=\"13. [ʊ]單元音\"></a>13. [ʊ]單元音</h2><img src=\"/post/43097/photo13.JPG\">\n<p>發音特點：</p>\n<ul>\n<li>嘴形壓扁</li>\n<li>像是中文的”餓”</li>\n</ul>\n<p>單詞：</p>\n<ul>\n<li>book</li>\n<li>good</li>\n<li>would</li>\n<li>foot</li>\n<li>full</li>\n<li>pull</li>\n</ul>\n","permalink":"http://yoursite.com/post/43097/","categories":[{"name":"學習","slug":"學習","permalink":"http://yoursite.com/categories/學習/"}],"tags":[{"name":"IPA","slug":"IPA","permalink":"http://yoursite.com/tags/IPA/"}]},{"title":"日記 - 061219","date":"2019-06-12T20:19:26.000Z","path":"/post/43644/","content":"<p>今天是星期三，所以今天早上去了剪草。每週三都要去剪草和倒垃圾。</p>\n<p>剛剛order完我的transcript，應該可以在7月頭前送到Davis吧。</p>\n<p>昨天要訂的貨，被其他人搶了。自己不知道是否要繼續去做FBA，還是改去做drop shipping。今天要抽一點的時間去研究drop shipping。</p>\n<p>很想要Macbook Pro啊，哈哈，真的很美。希望下一年能買一個。</p>\n<h1 id=\"Todo-list\"><a href=\"#Todo-list\" class=\"headerlink\" title=\"Todo list\"></a>Todo list</h1><ul>\n<li>剪草、倒垃圾</li>\n<li>order transcript</li>\n<li>leetcode </li>\n<li>IPA</li>\n<li>學一下python</li>\n<li>看一會so good they can’t ignore you</li>\n</ul>\n","permalink":"http://yoursite.com/post/43644/","categories":[{"name":"生活點滴","slug":"生活點滴","permalink":"http://yoursite.com/categories/生活點滴/"}],"tags":[]},{"title":"日記 - 061119","date":"2019-06-12T05:45:01.000Z","path":"/post/44240/","content":"<p>嘻嘻，歡迎川川！</p>\n<p>有一個多月没有更新了。5月底時已經考完試了。本想着考完試後會閒下來，但實際上卻是相反。最近在弄Amazon上弄FBA的東西，算上這個summer的一個小小的project，希望可以學到東西之餘，還可以賺到一些的錢。希望明天可以找到一個比較好的product。</p>\n<p>還有兩年的才畢業，還有兩年的學費要交。這兩年的學費可以提升很多的credit，我朋友現在的credit都到720左右了。本來我是想着要用debit card的，因為錢將會在debit card裡，没想過要申請credit card去交學費。很開心，知道了這個。我以前剛好在學校打過工，所以有工卡，可以申請到credit card。明天去申請去，嘻嘻。</p>\n<p>哇，好累啊，不想寫了哈哈。明天再寫。</p>\n","permalink":"http://yoursite.com/post/44240/","categories":[{"name":"生活點滴","slug":"生活點滴","permalink":"http://yoursite.com/categories/生活點滴/"}],"tags":[]},{"title":"日記 - 042219","date":"2019-04-22T18:38:19.000Z","path":"/post/11781/","content":"<p>今天發現了一個叫timing的app，這是一個供多一起學習的app。具體有什麼的功能，我暫時也不太清楚。但其實有一個能功是，可以快拍自己學習的視頻。今天打算試試去玩一下這。</p>\n<p>另外，今天還了一個手工藝品(能吃的)。下個月是我舅媽外甥的生日，所以她想為他親自做一個生日蛋糕。這個生日蛋糕是以鯊魚為主題的。一會我會放一些照片在這。<br><img src=\"/post/11781/photo1.jpg\"><br><img src=\"/post/11781/photo2.jpg\"><br><img src=\"/post/11781/photo3.jpg\"></p>\n<h1 id=\"今日句子\"><a href=\"#今日句子\" class=\"headerlink\" title=\"今日句子\"></a>今日句子</h1><p>When someone says, I want a programming language in which I need only say what I wish done, give him a lollipop. -Alan Perlis</p>\n<p>The “real meat” of history is ideas and ideals that have proved their worth in practical use.</p>\n<p>The ultimate aim of pragramming is always to produce useful systems.</p>\n<p>we cannot not have all of the good properties because several of the properties are mutually exclusive.</p>\n<h1 id=\"今日英語單詞\"><a href=\"#今日英語單詞\" class=\"headerlink\" title=\"今日英語單詞\"></a>今日英語單詞</h1><ul>\n<li>bunk (N-count) 鋪位  History is a bunk. 95% of everthing is bunk.</li>\n</ul>\n","permalink":"http://yoursite.com/post/11781/","categories":[{"name":"生活點滴","slug":"生活點滴","permalink":"http://yoursite.com/categories/生活點滴/"}],"tags":[{"name":"日記","slug":"日記","permalink":"http://yoursite.com/tags/日記/"}]},{"title":"日記 - 042119","date":"2019-04-21T19:12:33.000Z","path":"/post/18879/","content":"<img src=\"/post/18879/photo1.jpg\">\n<p>這是午餐吃的沙拉。</p>\n<h1 id=\"知識爆炸的時代\"><a href=\"#知識爆炸的時代\" class=\"headerlink\" title=\"知識爆炸的時代\"></a>知識爆炸的時代</h1><p>自從有了計算機和網絡後，我們就步入了知識爆炸的時代了。 讀書讀的快，固然是件好事。但我認為我們得學會去過濾不重要的信息。</p>\n<p>哈哈，今天没想到要寫些什麼。</p>\n","permalink":"http://yoursite.com/post/18879/","categories":[{"name":"生活點滴","slug":"生活點滴","permalink":"http://yoursite.com/categories/生活點滴/"}],"tags":[{"name":"日記","slug":"日記","permalink":"http://yoursite.com/tags/日記/"}]},{"title":"收到大學的通知","date":"2019-04-21T04:59:32.000Z","path":"/post/62046/","content":"<img src=\"/post/62046/photo1.PNG\">\n<p>昨天下午我準備去洗澡時，收到這個通知書。很好心，很期待在這可以學到很多的知識。我身邊與我同年齡的朋友都基本上畢業了一年了，而我卻還有兩年要去讀。我會好好珍惜這一個機會，以前我是被逼着要去讀書，而這次是我主動要去讀的。我知道我為什麼讀，我有清晰的目標和足夠的動力。</p>\n","permalink":"http://yoursite.com/post/62046/","categories":[{"name":"生活點滴","slug":"生活點滴","permalink":"http://yoursite.com/categories/生活點滴/"}],"tags":[]},{"title":"要開始Van Life？","date":"2019-04-19T16:38:00.000Z","path":"/post/15662/","content":"<p>昨天舅舅舅媽帶我去看房車。由於昨天太陽很大，很熱，所以没有照很多相片。<br><img src=\"/post/15662/photo1.jpg\"><br><img src=\"/post/15662/photo2.jpg\"><br><img src=\"/post/15662/photo3.jpg\"></p>\n<p>房車有不同的長度，房車的內部間隔也有很多不同的選擇。哈哈，這是我第一次親身去看房車。挻有趣的。</p>\n","permalink":"http://yoursite.com/post/15662/","categories":[{"name":"生活點滴","slug":"生活點滴","permalink":"http://yoursite.com/categories/生活點滴/"}],"tags":[]},{"title":"她還好嗎？","date":"2019-04-17T17:26:46.000Z","path":"/post/63041/","content":"<p>每快到我舅舅生日時，我就會想起她，因為他們是同一天生日的，都是4月18日。不知道她最近還好嗎？已經很久没有聽到有關她的消息了，很久没有和她聯繫了。(她不理我，哈哈)</p>\n<p>I want what’s best for her!</p>\n<p>哈哈，我早上的時候給她發了個新日快樂，下午的時候她居然回我的信息。很意外，好開心，哈哈。</p>\n","permalink":"http://yoursite.com/post/63041/","categories":[{"name":"生活點滴","slug":"生活點滴","permalink":"http://yoursite.com/categories/生活點滴/"}],"tags":[]},{"title":"今天我煮飯，哈","date":"2019-04-16T19:21:14.000Z","path":"/post/21374/","content":"<p>中午時在想，今晚該煮什麼東西吃。最後決定了晚餐就吃意粉吧。意粉算是最好煮的晚餐啦。<br><img src=\"/post/21374/photo1.PNG\"><br><img src=\"/post/21374/photo2.PNG\"></p>\n","permalink":"http://yoursite.com/post/21374/","categories":[{"name":"生活點滴","slug":"生活點滴","permalink":"http://yoursite.com/categories/生活點滴/"}],"tags":[]},{"title":"置頂","date":"2019-04-16T06:40:13.000Z","path":"/post/4103/","content":"<h1 id=\"今天日期-6月25日\"><a href=\"#今天日期-6月25日\" class=\"headerlink\" title=\"今天日期 (6月25日)\"></a>今天日期 (6月25日)</h1><h1 id=\"讀書進度\"><a href=\"#讀書進度\" class=\"headerlink\" title=\"讀書進度\"></a>讀書進度</h1><table>\n<thead>\n<tr>\n<th>書名</th>\n<th>進度</th>\n<th>更新日期</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>IPA</td>\n<td>第13個元音</td>\n<td>2019-06-14</td>\n</tr>\n<tr>\n<td>黑客與畫家</td>\n<td>第二章</td>\n<td>2019-06-25</td>\n</tr>\n<tr>\n<td>So good they can’t ignore you</td>\n<td>Chapter 6</td>\n<td>2019-06-15</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"書單\"><a href=\"#書單\" class=\"headerlink\" title=\"書單\"></a>書單</h1><table>\n<thead>\n<tr>\n<th>書名</th>\n<th>狀態</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Automate The Boring Stuff With Python</td>\n<td>Done</td>\n</tr>\n</tbody>\n</table>\n<p>最近在學一門MIT的公開課，18.01(Signle Variable Calculus) </p>\n","permalink":"http://yoursite.com/post/4103/","categories":[{"name":"學習","slug":"學習","permalink":"http://yoursite.com/categories/學習/"}],"tags":[]},{"title":"2019年的目標與計劃(上半年)","date":"2019-04-16T04:53:38.000Z","path":"/post/7944/","content":"<p>(小編正在建設中)<br><img src=\"/post/7944/photo.PNG\"><br>今年年頭的時候給自己做了一個2019年的目標與計劃，我還專門做了一個ppt呢，這裡所有的圖都是我從那ppt上拿的。</p>\n<img src=\"/post/7944/photo1.PNG\">\n<p>我以前都没有為自己制定過目標和計劃，直到有一個前輩向我推薦了這一本書。現在回想起來，真的很感謝他。希望以後還有機會能再見到他，到時候我請他去吃飯去，哈哈。</p>\n<h1 id=\"書籍介紹：《一生的計劃》\"><a href=\"#書籍介紹：《一生的計劃》\" class=\"headerlink\" title=\"書籍介紹：《一生的計劃》\"></a>書籍介紹：《一生的計劃》</h1><p>這本書有電子版中，有興趣的朋友上網一找再有了。這一本書主要是講制定目楆與計劃。注意：目楆和計劃不是同樣的東西喔。</p>\n<ul>\n<li>目標：你想要達到的結果</li>\n<li>計劃：幫助你達到目標的具體藍圖</li>\n</ul>\n<h1 id=\"構成生活的主要方面\"><a href=\"#構成生活的主要方面\" class=\"headerlink\" title=\"構成生活的主要方面\"></a>構成生活的主要方面</h1><img src=\"/post/7944/photo2.PNG\">\n<p>如果你不知道要為自己定什麼目楆的話，可以試從以上這四個方面想。</p>\n<h1 id=\"之前我所定的目標與計劃\"><a href=\"#之前我所定的目標與計劃\" class=\"headerlink\" title=\"之前我所定的目標與計劃\"></a>之前我所定的目標與計劃</h1><img src=\"/post/7944/photo3.PNG\">\n<p>注：自己根本没有去實行</p>\n<p>哈哈，我的目標都白定了……最後，我這上半年的目標變為：學好這學期的4門課。</p>\n","permalink":"http://yoursite.com/post/7944/","categories":[],"tags":[]},{"title":"節約用水的良方","date":"2019-04-16T02:46:03.000Z","path":"/post/28294/","content":"<p>昨天我們家的熱水器壞了，所以被迫要洗一個冷水澡。我所住的地方晚上比較冷，所以水變的很冷。我記得昨天洗的澡是我從出生到現在用時最短的一次，不到兩分鐘。我想，如果我們家不去修這個熱水器的話，我們一年肯定能省很多的水……</p>\n<p>另外，因為這一件事情，我才知道原來有些熱水器的加熱方法是：明火在底下燒……長見識了哈哈！</p>\n<p>剛剛我和媽媽打了個電話，她說我們家的熱水器一直都是這樣的……原來我的觀察力差，好吧……</p>\n","permalink":"http://yoursite.com/post/28294/","categories":[{"name":"生活點滴","slug":"生活點滴","permalink":"http://yoursite.com/categories/生活點滴/"}],"tags":[]},{"title":"Binary Tree筆記","date":"2019-04-16T02:37:07.000Z","path":"/post/26965/","content":"<p>(建設中，請耐心等候)</p>\n<p>哈哈，今天我想寫的東西是tree。tree是一種數據結構，在計算機的世界裡是很重要的。你問我有什麼具體用途？問的好，我就舉一個用途吧。這個tree可以用在寫一個compiler，你說是不是很有用呢，哈哈！</p>\n<h1 id=\"tree的樣子\"><a href=\"#tree的樣子\" class=\"headerlink\" title=\"tree的樣子\"></a>tree的樣子</h1><img src=\"/post/26965/photo.PNG\">\n<p>我們這個tree和平常在大自然中見到的tree樣子有一點點不一樣。主要分別是，我們這個是反的，最頂的是root，下面的是leaves。是不是很有趣呢？哈哈，我又在逗自己玩……</p>\n<p>那些A、B、C、D，我們管他們叫node，你可以放東西在他們身上。</p>\n<h1 id=\"什麼是Binary-Trees\"><a href=\"#什麼是Binary-Trees\" class=\"headerlink\" title=\"什麼是Binary Trees\"></a>什麼是Binary Trees</h1><ul>\n<li>每一個node最多只能有兩個nodes。</li>\n<li>A unique path exists form the root to every other node. (只有一條路，從root到其他的node)<img src=\"/post/26965/photo1.PNG\">\n</li>\n</ul>\n<h1 id=\"Binary-search-tree\"><a href=\"#Binary-search-tree\" class=\"headerlink\" title=\"Binary search tree\"></a>Binary search tree</h1><p>這也是binary tree的一種，這有以下的兩個特點。</p>\n<ol>\n<li>Left child node is smaller than its parent node</li>\n<li>right child node is greater than its parent node<img src=\"/post/26965/photo2.PNG\">\n</li>\n</ol>\n<h1 id=\"Binary-tree的結構\"><a href=\"#Binary-tree的結構\" class=\"headerlink\" title=\"Binary tree的結構\"></a>Binary tree的結構</h1><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">TreeNode</span>&#123;</span></span><br><span class=\"line\">\tItemType info;</span><br><span class=\"line\">\tTreeNode* left;</span><br><span class=\"line\">\tTreeNode* right;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"/post/26965/photo3.PNG\">\n<h1 id=\"Searching-for-a-value\"><a href=\"#Searching-for-a-value\" class=\"headerlink\" title=\"Searching for a value\"></a>Searching for a value</h1><p>接下來要講的是searching的算法</p>\n<p>以下的這個算法是<strong>不用recursion</strong>的</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">searchNoRecursion</span><span class=\"params\">(node* leaf, <span class=\"keyword\">int</span> key)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">bool</span> found = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//這算法用while loop，不用recursion，從上向下找</span></span><br><span class=\"line\">\t<span class=\"comment\">//找不到的話，按key的大小去決定向左或是向右</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(leaf!=<span class=\"literal\">NULL</span> &amp;&amp; !found)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(key==leaf-&gt;key)&#123;</span><br><span class=\"line\">\t\t\tfound = <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (key&lt;leaf-&gt;key)</span><br><span class=\"line\">\t\t\tleaf = leaf-&gt;left;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t\tleaf = leaf-&gt;right;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> found;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>以下的這個算法是<strong>用recursion</strong>的<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">searchRecursion</span><span class=\"params\">(node* leaf, <span class=\"keyword\">int</span> key)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">bool</span> found = <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(leaf!=<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(key==leaf-&gt;key)&#123;</span><br><span class=\"line\">\t\tfound=<span class=\"literal\">true</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(key&lt;leaf-&gt;key)</span><br><span class=\"line\">\t\tfound = searchRecursion(leaf-&gt;left,key); <span class=\"comment\">//小的話向左下走</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"comment\">//大的話向右下走</span></span><br><span class=\"line\">\t\tfound = searchRecursion(leaf-&gt;right,key);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> \t<span class=\"keyword\">return</span> found;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Inserting-a-node\"><a href=\"#Inserting-a-node\" class=\"headerlink\" title=\"Inserting a node\"></a>Inserting a node</h1><p>以下的這個算法是Tail Recursive<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Insert</span> <span class=\"params\">(node*&amp; leaf, <span class=\"keyword\">int</span> item)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(leaf==<span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">\t\tleaf = <span class=\"keyword\">new</span> node;</span><br><span class=\"line\">\t\tleaf-&gt;right = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t\tleaf-&gt;left = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t\tleaf-&gt;key = item;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(item&lt;leaf-&gt;key)</span><br><span class=\"line\">\t\tInsert(leaf-&gt;left,item);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\tInsert(leaf-&gt;right,item);\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>有很多不同的算法都可以實現insert，但個人來說比較喜歡用以上這個。</p>\n<h1 id=\"Deleting-a-node\"><a href=\"#Deleting-a-node\" class=\"headerlink\" title=\"Deleting a node\"></a>Deleting a node</h1><p>尋求要刪除的node。一但找到之後，會有以下三個可能出現的情況。</p>\n<ol>\n<li>這個node没有children (leaf node)<ul>\n<li>直接刪，然後叫node的parent指向null</li>\n</ul>\n</li>\n<li>這個Node有一個child<ul>\n<li>將這個node指向要被刪的那node的parent</li>\n<li>刪除那個node</li>\n</ul>\n</li>\n<li>這個Node有兩個children (這有兩個選擇，但我只列其中的一個)<ul>\n<li>去右邊的那child，然後去到底。(去右邊找最小值)</li>\n<li>將這個值放到我們本來要刪的那個node</li>\n<li>刪了那個最低的child</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">node* <span class=\"title\">deleteNode</span><span class=\"params\">(node* root, <span class=\"keyword\">int</span> data)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(root == <span class=\"literal\">NULL</span>) <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(data &lt; root-&gt;data) root-&gt;left = deleteNode(root-&gt;left,data);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (data &gt; root-&gt;data) root-&gt;right = deleteNode(root-&gt;right,data);</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// Case 1 </span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(root-&gt;left == <span class=\"literal\">NULL</span> &amp;&amp; root-&gt;right == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">delete</span> root;</span><br><span class=\"line\">\t\t\troot = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//Case 2</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(root-&gt;left == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t\tnode *temp = root;</span><br><span class=\"line\">\t\t\troot = root-&gt;right;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">delete</span> temp;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(root-&gt;right == <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">\t\t\tnode *temp = root;</span><br><span class=\"line\">\t\t\troot = root-&gt;left;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">delete</span> temp;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// case 3</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\tnode *temp = FindMin(root-&gt;right);</span><br><span class=\"line\">\t\t\troot-&gt;data = temp-&gt;data;</span><br><span class=\"line\">\t\t\troot-&gt;right = deleteNode(root-&gt;right,temp-&gt;data);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> root;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"Depth-First-traversal\"><a href=\"#Depth-First-traversal\" class=\"headerlink\" title=\"Depth-First traversal\"></a>Depth-First traversal</h1><p>這裡有三種depth-first traversal: pre-order, in-order and post-order。 </p>\n<h2 id=\"Pre-order\"><a href=\"#Pre-order\" class=\"headerlink\" title=\"Pre-order\"></a>Pre-order</h2><pre><code>1. Visit the root.\n2. Traverse the left subtree.\n3. Traverse the right subtree.\n</code></pre><h2 id=\"In-order\"><a href=\"#In-order\" class=\"headerlink\" title=\"In-order\"></a>In-order</h2><pre><code>1. Traverse the left subtree.\n2. Visit the root.\n3. Traverse the right subtree.\n</code></pre><h2 id=\"Post-order\"><a href=\"#Post-order\" class=\"headerlink\" title=\"Post-order\"></a>Post-order</h2><pre><code>1. Traverse the left subtree.\n2. Traverse the right subtree.\n3. Visit the root.\n</code></pre><p>這三種算法的結構是一樣的，唯一不同的只是次序。所以我在下面就只寫其中一個。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">preOrder</span><span class=\"params\">(node* root)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(root != <span class=\"literal\">NULL</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,root-&gt;key);</span><br><span class=\"line\">\t\tpreOrder(root-&gt;left);</span><br><span class=\"line\">\t\tpreOrder(root-&gt;right);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","permalink":"http://yoursite.com/post/26965/","categories":[{"name":"學習","slug":"學習","permalink":"http://yoursite.com/categories/學習/"}],"tags":[{"name":"data structure","slug":"data-structure","permalink":"http://yoursite.com/tags/data-structure/"},{"name":"tree","slug":"tree","permalink":"http://yoursite.com/tags/tree/"}]},{"title":"反思-有關於blog和oneNote","date":"2019-04-16T01:33:09.000Z","path":"/post/28114/","content":"<p>自我買了surface pro之後，我就開始用oneNote去做筆記。</p>\n<h1 id=\"我oneNote筆記的大致結構\"><a href=\"#我oneNote筆記的大致結構\" class=\"headerlink\" title=\"我oneNote筆記的大致結構\"></a>我oneNote筆記的大致結構</h1><img src=\"/post/28114/photo.PNG\">\n<p>我有一個section是叫做log，專門用來記錄每一週所要完成的任務。我這學期所上的每一門課都有自己的section。</p>\n<img src=\"/post/28114/photo2.PNG\">\n<p>從上面這個圖可以看到，我的筆記是按週來分類的。</p>\n<h1 id=\"反思什麼？\"><a href=\"#反思什麼？\" class=\"headerlink\" title=\"反思什麼？\"></a>反思什麼？</h1><p>我在反思什麼呢？哈哈，我就是在想blog裡的東西會不會和oneNote裡的東西有重疊。我是假設没有人會知道我的這一個blog，所以這個blog的期待讀客也就只有我一個。在這一方面，blog和oneNote是一樣的，都是為自己而寫的。</p>\n<p>嗯，想了一下之後。我發現，我還是希望有人不經意會發現這個blog，哈哈。如果我没有這個想法的話，那我應該是直接用oneNote就好了。這一篇很像廢話……但是我自己玩的開心就好，哈哈。</p>\n","permalink":"http://yoursite.com/post/28114/","categories":[{"name":"學習","slug":"學習","permalink":"http://yoursite.com/categories/學習/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://yoursite.com/tags/blog/"},{"name":"oneNote","slug":"oneNote","permalink":"http://yoursite.com/tags/oneNote/"}]},{"title":"Hexo Blog的useful Links","date":"2019-04-16T00:39:57.000Z","path":"/post/37442/","content":"<p>由於現在會經常去寫blog，所以在這留幾個可能我以後會用到的links。</p>\n<ul>\n<li><a href=\"https://markdown.tw/\" target=\"_blank\" rel=\"noopener\">https://markdown.tw/</a></li>\n<li><a href=\"https://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/zh-cn/</a></li>\n</ul>\n","permalink":"http://yoursite.com/post/37442/","categories":[{"name":"學習","slug":"學習","permalink":"http://yoursite.com/categories/學習/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://yoursite.com/tags/blog/"},{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"雪球速讀法(非讀後感)......","date":"2019-04-15T22:05:19.000Z","path":"/post/55058/","content":"<p>在前幾天，我在網上看到一本書叫《雪球速讀法》。我其實没有真的看過這一本書，我只是看了一下別人做的一個總結。覺得挻有趣的，所以在這記錄一下。</p>\n<h1 id=\"雜學資料庫\"><a href=\"#雜學資料庫\" class=\"headerlink\" title=\"雜學資料庫\"></a>雜學資料庫</h1><p>雪球速讀法中一個重要的概念是雜學資料庫。雜學資料庫就是我們過住所累積的知識。</p>\n<p>我們閱讀的速度是跟我們自身的雜學資料庫有直接的關係。請看以下的例子。</p>\n<ul>\n<li>第二次去讀同一本書，速度都比較快</li>\n<li>xx major畢業的，讀xx major的書會比較快</li>\n</ul>\n<p>這個讀書法就像滾雪球一樣，愈滾愈大。(像馬太效應)</p>\n<h1 id=\"具體的技巧\"><a href=\"#具體的技巧\" class=\"headerlink\" title=\"具體的技巧\"></a>具體的技巧</h1><p>以30分鐘為看一本的目標，花3分之2的時候去了解整本書的結構。最後選你有興趣的地方看。簡單來說，就是一次看書時，請花多一點時間在目錄上，個人認為最好能把比較多的結構背下來。</p>\n<h1 id=\"個人小小的感想\"><a href=\"#個人小小的感想\" class=\"headerlink\" title=\"個人小小的感想\"></a>個人小小的感想</h1><p>現在市面有很多有關速讀的書，我猜可以是因為現在處於一個信息爆炸的時代吧。 但是我們不能為了快而快，有時候，慢才是快。我們在重視的不是速度，而是效率。讀過一本書的定義是：你能跟人簡述一下那本書的內容。</p>\n","permalink":"http://yoursite.com/post/55058/","categories":[{"name":"學習","slug":"學習","permalink":"http://yoursite.com/categories/學習/"}],"tags":[]},{"title":"我會在這Blog上寫些什麼？","date":"2019-04-15T19:56:46.000Z","path":"/post/36504/","content":"<h1 id=\"我寫blog的動機、原因\"><a href=\"#我寫blog的動機、原因\" class=\"headerlink\" title=\"我寫blog的動機、原因\"></a>我寫blog的動機、原因</h1><p>一閞始(約4個月前)我想寫blog的原因是為了將來好找工作。但是我很快就失去了動力，然後就没堅持下去。  </p>\n<p>這一次，我寫blog，没有很明確的目的……只是為了自己開心，而去寫的。如果硬要找一個原因的話，我覺得可能是因為孤獨。不知道從什麼時候開始，我就不太跟朋友聯繫，過了一段時間之後，我發現我可能一個月才會和一些朋友去聊一下天。我想，我寫blog的原因，應該是為了滿足自己想說話，想表達自己的這一個很人類的需要吧。</p>\n<h1 id=\"我會在這寫些什麼？\"><a href=\"#我會在這寫些什麼？\" class=\"headerlink\" title=\"我會在這寫些什麼？\"></a>我會在這寫些什麼？</h1><p>我會在這寫任何的東西，學習的，生活的。這一個blog的定位就是没有定位，哈哈。</p>\n","permalink":"http://yoursite.com/post/36504/","categories":[{"name":"生活點滴","slug":"生活點滴","permalink":"http://yoursite.com/categories/生活點滴/"}],"tags":[]},{"title":"Four Essential Features of Object-Oriented Programming (Unfinished)","date":"2018-12-30T04:00:40.000Z","path":"/post/64433/","content":"<p>(爛尾了，哈哈)</p>\n<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>There are four core concepts in object-oriented programming. They are encapsulation, abstraction, inheritance and polymorphism.  </p>\n<p>In OOP, program consists of a set of objects. </p>\n<img src=\"/post/64433/Sketch002.jpg\">\n<p>In the world of OOP, almost everything is an object. </p>\n<p>Let’s look at the following example. Sorry for the ugly drawing.<br><img src=\"/post/64433/Sketch003.jpg\"></p>\n<p>This example is going to show the power of object-oriented programming. Let’s imagine that you are asked to make a car. Then, you will start to think what are the components of a car. Battery, axle, brakes, doors, windows, these are the examples of components. In object-oriented programming, we call these component objects. </p>\n<p><strong>Object</strong></p>\n<blockquote>\n<p>A object is an entity that contains data and methods. </p>\n</blockquote>\n<p>Note: object can also be the data of other objects.</p>\n<p>Every object contains data and methods.</p>\n <img src=\"/post/64433/Sketch004.jpg\">\n<p><strong>Data</strong></p>\n<blockquote>\n<p>Information that stored in an object.</p>\n</blockquote>\n<p><strong>Method</strong></p>\n<blockquote>\n<p>actions that an object can do. </p>\n</blockquote>\n<p>Note: There is difference between classes and instances. classes is the blueprints for new object, while instance is the object that is created from its blueprint(class). </p>\n<h1 id=\"Encapsulation\"><a href=\"#Encapsulation\" class=\"headerlink\" title=\"Encapsulation\"></a>Encapsulation</h1><blockquote>\n<p>Hiding the implementation details of an object. </p>\n</blockquote>\n<p>To understand the concept of encapsulation, recall the analogy of cars as objects. </p>\n<h2 id=\"Benefit-of-Encapsulation\"><a href=\"#Benefit-of-Encapsulation\" class=\"headerlink\" title=\"Benefit of Encapsulation\"></a>Benefit of Encapsulation</h2><ul>\n<li>to protect program data</li>\n<li>clients can use the program without any understanding of the implementation details</li>\n</ul>\n<h1 id=\"Abstraction\"><a href=\"#Abstraction\" class=\"headerlink\" title=\"Abstraction\"></a>Abstraction</h1><h1 id=\"Inheritance\"><a href=\"#Inheritance\" class=\"headerlink\" title=\"Inheritance\"></a>Inheritance</h1><h1 id=\"Polymorphism\"><a href=\"#Polymorphism\" class=\"headerlink\" title=\"Polymorphism\"></a>Polymorphism</h1>","permalink":"http://yoursite.com/post/64433/","categories":[],"tags":[]},{"title":"Reference or Pointer in Object-Oriented Programming (Unfinished)","date":"2018-12-28T17:23:15.000Z","path":"/post/32135/","content":"<p>(爛尾了，不刪了，給個紀念，哈哈)</p>\n<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>Reference or pointer is a very important concept in object-oriented programming. Reference and pointer are kinds of the same concept just with different names. The following discussion will begin with a single line of code.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Human daniel = <span class=\"keyword\">new</span> Human();</span><br></pre></td></tr></table></figure>\n<p>related post: <a href=\"/post/64433\">Four Core Features of Object-Oriented Programming</a></p>\n<h1 id=\"Object-Oriented-Programming-OOP\"><a href=\"#Object-Oriented-Programming-OOP\" class=\"headerlink\" title=\"Object-Oriented Programming (OOP)\"></a>Object-Oriented Programming (OOP)</h1><p>Object-Oriented programming is a new approach to programming. Instead of giving a set of actions to a program (procedural programming), we use objects to be the building block of the whole program.</p>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n<h1 id=\"Example-in-Java\"><a href=\"#Example-in-Java\" class=\"headerlink\" title=\"Example in Java\"></a>Example in Java</h1><p>The following statement is an example of how you create an object in java.</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Human daniel = <span class=\"keyword\">new</span> Human();</span><br></pre></td></tr></table></figure>\n<p>To create a new object in java, it involves the use of the keyword <strong>new</strong> to allocate the memory space of the object and the use of the object’s constructor, <strong>Human()</strong> in this case, to initialize the space. </p>\n","permalink":"http://yoursite.com/post/32135/","categories":[],"tags":[]},{"title":"Common Markdown Syntax","date":"2018-12-28T06:29:50.000Z","path":"/post/47652/","content":"<h1 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h1><p>Markdown is a markup language with plain text formatting syntax. The two most popular usages of markdown are formatting readme files and writing posts in online forums. If you are going to be a software engineer in the future, you will use markdown a lot. </p>\n<p>reason for writing this: for my to learn markdown + want to post something on my blog. lol</p>\n<h1 id=\"Basic-Syntax\"><a href=\"#Basic-Syntax\" class=\"headerlink\" title=\"Basic Syntax\"></a>Basic Syntax</h1><h2 id=\"Headings\"><a href=\"#Headings\" class=\"headerlink\" title=\"Headings\"></a>Headings</h2><p>Adding # in front of a word or phrase will create a heading. There are six heading level. The number of # that in front of a word or phrase represents the level of the heading.<br>note: level 1 has the largest font size.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Heading level 1</span><br><span class=\"line\">## Heading level 2</span><br><span class=\"line\">### Heading level 3</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">.</span><br><span class=\"line\">###### Heading level 6</span><br></pre></td></tr></table></figure></p>\n<p>some of the blog frameworks would even automatically generate the tables of content for you according to the headings that you used.</p>\n<img src=\"/post/47652/image2.png\">\n<h2 id=\"Emphasis\"><a href=\"#Emphasis\" class=\"headerlink\" title=\"Emphasis\"></a>Emphasis</h2><p>There are two types of emphasis(I am not sure whether there are more) that you can add to the text: bold and italic.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*italic*</span><br><span class=\"line\">**bold**</span><br><span class=\"line\">***bold and italic***</span><br><span class=\"line\">~~strikethrough~~</span><br></pre></td></tr></table></figure>\n<h2 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h2><p>There two types of list: ordered list and unordered list.</p>\n<h3 id=\"Ordered-list\"><a href=\"#Ordered-list\" class=\"headerlink\" title=\"Ordered list\"></a>Ordered list</h3><p>What you need to do to make an ordered list is to add numbers followed by periods.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. item 1</span><br><span class=\"line\">2. item 2</span><br><span class=\"line\">3. item 3</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"Unordered-list\"><a href=\"#Unordered-list\" class=\"headerlink\" title=\"Unordered list\"></a>Unordered list</h3><p>To make a unordered list, you need to add a <strong>-</strong> in front of the items.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- item 1</span><br><span class=\"line\">- item 2</span><br><span class=\"line\">- item 3</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Blockquotes\"><a href=\"#Blockquotes\" class=\"headerlink\" title=\"Blockquotes\"></a>Blockquotes</h2><p>To make a Blockquote, you need to add a <strong>&gt;</strong> in front of a paragraph. </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; paragraph</span><br><span class=\"line\"></span><br><span class=\"line\">or </span><br><span class=\"line\"></span><br><span class=\"line\">&gt;multiple paragraph</span><br><span class=\"line\">&gt;</span><br><span class=\"line\">&gt;multiple paragraph</span><br></pre></td></tr></table></figure>\n<h2 id=\"Horizontal-Rules\"><a href=\"#Horizontal-Rules\" class=\"headerlink\" title=\"Horizontal Rules\"></a>Horizontal Rules</h2><p>To make a horizontal rule, use three or more ***.</p>\n<h2 id=\"image\"><a href=\"#image\" class=\"headerlink\" title=\"image\"></a>image</h2><p>To insert a picture, use the following syntax.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">![alt text](link of the picture)</span><br></pre></td></tr></table></figure>\n<p>If you also use Hexo to build your blog, I recommend you to use asset folders to upload your pictures.<br>It is easier to manage your pictures by using asset folders. </p>\n<p>More Info:  <a href=\"https://hexo.io/docs/asset-folders.html\" target=\"_blank\" rel=\"noopener\">Asset Folders - Hexo</a></p>\n<h2 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h2><p>To insert a link, use the following syntax.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[alt text](link)</span><br></pre></td></tr></table></figure>\n<p>Note: it looks like serting a picture, but they are different!</p>\n<h2 id=\"Code-Block\"><a href=\"#Code-Block\" class=\"headerlink\" title=\"Code Block\"></a>Code Block</h2><p>Nearly forget to mention the code block feature.</p>\n<img src=\"/post/47652/image1.png\">\n<p>These are the common features I use for writing my blog.</p>\n","permalink":"http://yoursite.com/post/47652/","categories":[],"tags":[]}]}